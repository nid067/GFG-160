  Pair sum in BST

/*
class Node {
    int data;
    Node left, right;

    public Node(int d) {
        data = d;
        left = right = null;
    }
}
*/
class Solution {
    boolean findPairSum(Node root,HashSet<Integer> set,int target) {
        if(root == null)    return false;
        
        if(set.contains(target-root.data))  return true;
        
        set.add(root.data);
        return findPairSum(root.left,set,target)    || findPairSum(root.right,set,target);
        
        
    }
   
    boolean findTarget(Node root, int target) {
        // Write your code here
        HashSet<Integer> set=new HashSet();
        return findPairSum(root,set,target);
    }
}
